# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oFXbFX9n-jqceB63q8ODr5nfV0WoJ0FU
"""

import pandas as pd
import statistics
import csv
import plotly.figure_factory as ff
import plotly.graph_objects as go

df = pd.read_csv("StudentsPerformance.csv") 

reading_list = df["reading score"].to_list()

mean = statistics.mean(reading_list)
median = statistics.median(reading_list)
mode = statistics.mode(reading_list)
std_deviation = statistics.stdev(reading_list)

print("Mean = ", mean)
print("Median = " , median)
print("Mode = ", mode)
print("Standard Deviation = ", std_deviation)

first_std_deviation_start, first_std_deviation_end = mean - std_deviation, mean + std_deviation
second_std_deviation_start, second_std_deviation_end = mean - (2*std_deviation), mean + (2*std_deviation)
third_std_deviation_start, third_std_deviation_end = mean - (3*std_deviation), mean + (3*std_deviation)

list_of_data_1 = [result for result in reading_list if result > first_std_deviation_start and result < first_std_deviation_end]
list_of_data_2 = [result for result in reading_list if result > second_std_deviation_start and result < second_std_deviation_end]
list_of_data_3 = [result for result in reading_list if result > third_std_deviation_start and result < third_std_deviation_end]

print("{}% of data lies between one standard deviation".format(len(list_of_data_1)*100.0/len(reading_list)))
print("{}% of data lies between two standard deviations".format(len(list_of_data_2)*100.0/len(reading_list)))
print("{}% of data lies between three standard deviations".format(len(list_of_data_3)*100.0/len(reading_list)))

fig = ff.create_distplot([reading_list],["Reading Scores"],show_hist=False)
fig.add_trace(go.Scatter(x=[mean,mean],y=[0,0.17],mode='lines',name='mean'))
fig.add_trace(go.Scatter(x=[first_std_deviation_start,first_std_deviation_start],y=[0,0.17],mode='lines',name='Standered Deviation 1'))
fig.add_trace(go.Scatter(x=[first_std_deviation_end,first_std_deviation_end],y=[0,0.17],mode='lines',name='Standered Deviation 1'))
fig.add_trace(go.Scatter(x=[second_std_deviation_start,second_std_deviation_start],y=[0,0.17],mode='lines',name='Standered Deviation 2'))
fig.add_trace(go.Scatter(x=[second_std_deviation_end,second_std_deviation_end],y=[0,0.17],mode='lines',name='Standered Deviation 2'))

fig.show()